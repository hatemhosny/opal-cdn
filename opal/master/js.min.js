Opal.modules.js=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$module=(Opal.$$$,Opal.$$,Opal.module),$truthy=Opal.truthy,$alias=Opal.alias;return Opal.add_stubs(["$insert","$<<","$global","$extend"]),function(self,$JS_$$$10){var $JS_new$5,$JS_new$6,$JS_call$9,self=$module(self,"JS");[self].concat($JS_$$$10);return Opal.def(self,"$delete",$JS_$$$10=function(object,property){return delete object[property]},$JS_$$$10.$$arity=2),Opal.def(self,"$global",$JS_$$$10=function(){return Opal.global},$JS_$$$10.$$arity=0),Opal.def(self,"$in",$JS_$$$10=function(property,object){return property in object},$JS_$$$10.$$arity=2),Opal.def(self,"$instanceof",$JS_$$$10=function(value,func){return value instanceof func},$JS_$$$10.$$arity=2),$truthy("function"==typeof Function.prototype.bind)?Opal.def(self,"$new",$JS_new$5=function(func,$a){var args=$JS_new$5.$$p,block=args||nil;return args&&($JS_new$5.$$p=null),args&&($JS_new$5.$$p=null),(args=Opal.slice.call(arguments,1,arguments.length)).$insert(0,this),$truthy(block)&&args["$<<"](block),new(func.bind.apply(func,args))},$JS_new$5.$$arity=-2):Opal.def(self,"$new",$JS_new$6=function(func,$a){var args,f,$post_args=$JS_new$6.$$p,block=$post_args||nil;return $post_args&&($JS_new$6.$$p=null),$post_args&&($JS_new$6.$$p=null),$post_args=Opal.slice.call(arguments,1,arguments.length),args=$post_args,$truthy(block)&&args["$<<"](block),(f=function(){return func.apply(this,args)}).prototype=func.prototype,new f},$JS_new$6.$$arity=-2),Opal.def(self,"$typeof",$JS_$$$10=function(value){return typeof value},$JS_$$$10.$$arity=1),Opal.def(self,"$void",$JS_$$$10=function(expr){},$JS_$$$10.$$arity=1),Opal.def(self,"$call",$JS_call$9=function(func,$a){var args=$JS_call$9.$$p,block=args||nil,g=nil;return args&&($JS_call$9.$$p=null),args&&($JS_call$9.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),g=this.$global(),$truthy(block)&&args["$<<"](block),g[func].apply(g,args)},$JS_call$9.$$arity=-2),$alias(self,"method_missing","call"),Opal.def(self,"$[]",$JS_$$$10=function(name){return Opal.global[name]},$JS_$$$10.$$arity=1),self.$extend(self)}($nesting[0],$nesting)};

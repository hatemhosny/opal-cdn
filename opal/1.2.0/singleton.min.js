Opal.modules.singleton=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$module=Opal.module,$send2=Opal.send2,$send=Opal.send,$truthy=Opal.truthy;return Opal.add_stubs(["$raise","$class","$__init__","$instance_eval","$new","$extend"]),function($Singleton_dup$2,$Singleton_clone$1){var $Singleton_dup$2=$module($Singleton_dup$2,"Singleton"),$nesting=[$Singleton_dup$2].concat($Singleton_clone$1);return Opal.def($Singleton_dup$2,"$clone",$Singleton_clone$1=function(){return this.$raise($$($nesting,"TypeError"),"can't clone instance of singleton "+this.$class())},$Singleton_clone$1.$$arity=0),Opal.def($Singleton_dup$2,"$dup",$Singleton_dup$2=function(){return this.$raise($$($nesting,"TypeError"),"can't dup instance of singleton "+this.$class())},$Singleton_dup$2.$$arity=0),function(self,$parent_nesting){var $SingletonClassMethods_clone$3,$SingletonClassMethods_inherited$4,$nesting=[self=$module(self,"SingletonClassMethods")].concat($parent_nesting);Opal.def(self,"$clone",$SingletonClassMethods_clone$3=function(){var $zuper_ii,$iter=$SingletonClassMethods_clone$3.$$p,$zuper=nil,$zuper_i=nil;for($iter&&($SingletonClassMethods_clone$3.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $$($nesting,"Singleton").$__init__($send2(this,Opal.find_super_dispatcher(this,"clone",$SingletonClassMethods_clone$3,!1,!0),"clone",$zuper,$iter))},$SingletonClassMethods_clone$3.$$arity=0),Opal.def(self,"$inherited",$SingletonClassMethods_inherited$4=function(sub_klass){var $zuper_ii,$iter=$SingletonClassMethods_inherited$4.$$p,$zuper=nil,$zuper_i=nil;for($iter&&($SingletonClassMethods_inherited$4.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $send2(this,Opal.find_super_dispatcher(this,"inherited",$SingletonClassMethods_inherited$4,!1,!0),"inherited",$zuper,$iter),$$($nesting,"Singleton").$__init__(sub_klass)},$SingletonClassMethods_inherited$4.$$arity=1)}($nesting[0],$nesting),function(self,$__init__$5){var $included$8,$nesting=[self].concat($__init__$5);return Opal.def(self,"$__init__",$__init__$5=function(klass){var $$6,$instance$7;return $send(klass,"instance_eval",[],(($$6=function(){return(null==$$6.$$s?this:$$6.$$s).singleton__instance__=nil}).$$s=this,$$6.$$arity=0,$$6)),Opal.defs(klass,"$instance",$instance$7=function(){return null==this.singleton__instance__&&(this.singleton__instance__=nil),$truthy(this.singleton__instance__)?this.singleton__instance__:this.singleton__instance__=this.$new()},$instance$7.$$arity=0),klass},$__init__$5.$$arity=1),Opal.def(self,"$included",$included$8=function(klass){var $zuper_ii,$iter=$included$8.$$p,$zuper=nil,$zuper_i=nil;for($iter&&($included$8.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $send2(this,Opal.find_super_dispatcher(this,"included",$included$8,!1,!0),"included",$zuper,$iter),klass.$extend($$($nesting,"SingletonClassMethods")),$$($nesting,"Singleton").$__init__(klass)},$included$8.$$arity=1),nil&&"included"}(Opal.get_singleton_class($$($nesting,"Singleton")),$nesting)}($nesting[0],$nesting)};

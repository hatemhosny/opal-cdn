Opal.modules.delegate=function(Opal){var $DelegateClass$5,self=Opal.top,$nesting=[],nil=Opal.nil,$$=(Opal.const_get_qualified,Opal.const_get_relative),$klass=(Opal.breaker,Opal.slice,Opal.klass),$truthy=Opal.truthy,$send=Opal.send;return Opal.add_stubs(["$__setobj__","$__getobj__","$respond_to?","$__send__","$to_proc"]),function($base,$super,$parent_nesting){var $Delegator_initialize$1,$Delegator_method_missing$2,self=$klass($base,$super,"Delegator");[self].concat($parent_nesting);Opal.def(self,"$initialize",$Delegator_initialize$1=function(obj){return this.$__setobj__(obj)},$Delegator_initialize$1.$$arity=1),Opal.def(self,"$method_missing",$Delegator_method_missing$2=function(m,$a){var args,$iter=$Delegator_method_missing$2.$$p,block=$iter||nil,target=nil;return $iter&&($Delegator_method_missing$2.$$p=null),$iter&&($Delegator_method_missing$2.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),target=this.$__getobj__(),$truthy(target["$respond_to?"](m))?$send(target,"__send__",[m].concat(Opal.to_a(args)),block.$to_proc()):$send(this,Opal.find_super_dispatcher(this,"method_missing",$Delegator_method_missing$2,!1),[m].concat(Opal.to_a(args)),block.$to_proc())},$Delegator_method_missing$2.$$arity=-2)}($nesting[0],$$($nesting,"BasicObject"),$nesting),function($base,$super,$parent_nesting){var $SimpleDelegator___getobj__$3,$SimpleDelegator___setobj__$4,self=$klass($base,$super,"SimpleDelegator");[self].concat($parent_nesting);self.$$prototype.delegate_sd_obj=nil,Opal.def(self,"$__getobj__",$SimpleDelegator___getobj__$3=function(){return this.delegate_sd_obj},$SimpleDelegator___getobj__$3.$$arity=0),Opal.def(self,"$__setobj__",$SimpleDelegator___setobj__$4=function(obj){return this.delegate_sd_obj=obj},$SimpleDelegator___setobj__$4.$$arity=1)}($nesting[0],$$($nesting,"Delegator"),$nesting),Opal.def(self,"$DelegateClass",$DelegateClass$5=function(superklass){return $$($nesting,"SimpleDelegator")},$DelegateClass$5.$$arity=1),nil&&"DelegateClass"};

Opal.modules.base64=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.const_get_qualified,Opal.const_get_relative),$module=(Opal.breaker,Opal.slice,Opal.module),$hash2=Opal.hash2,$truthy=Opal.truthy;return Opal.add_stubs(["$raise","$delete"]),function($base,$parent_nesting){var $Base64_decode64$1,$Base64_encode64$2,$Base64_strict_decode64$3,$Base64_strict_encode64$4,$Base64_urlsafe_decode64$5,$Base64_urlsafe_encode64$6,encode,decode,self=$module($base,"Base64"),$nesting=[self].concat($parent_nesting),chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";encode=Opal.global.btoa||function(input){for(var block,charCode,str=String(input),idx=0,map=chars,output="";str.charAt(0|idx)||(map="=",idx%1);output+=map.charAt(63&block>>8-idx%1*8))255<(charCode=str.charCodeAt(idx+=.75))&&self.$raise($$($nesting,"ArgumentError"),"invalid character (failed: The string to be encoded contains characters outside of the Latin1 range.)"),block=block<<8|charCode;return output},decode=Opal.global.atob||function(input){var str=String(input).replace(/=+$/,"");str.length%4==1&&self.$raise($$($nesting,"ArgumentError"),"invalid base64 (failed: The string to be decoded is not correctly encoded.)");for(var bs,buffer,bc=0,idx=0,output="";buffer=str.charAt(idx++);~buffer&&(bs=bc%4?64*bs+buffer:buffer,bc++%4)?output+=String.fromCharCode(255&bs>>(-2*bc&6)):0)buffer=chars.indexOf(buffer);return output},Opal.defs(self,"$decode64",$Base64_decode64$1=function(string){return decode(string.replace(/\r?\n/g,""))},$Base64_decode64$1.$$arity=1),Opal.defs(self,"$encode64",$Base64_encode64$2=function(string){return encode(string).replace(/(.{60})/g,"$1\n").replace(/([^\n])$/g,"$1\n")},$Base64_encode64$2.$$arity=1),Opal.defs(self,"$strict_decode64",$Base64_strict_decode64$3=function(string){return decode(string)},$Base64_strict_decode64$3.$$arity=1),Opal.defs(self,"$strict_encode64",$Base64_strict_encode64$4=function(string){return encode(string)},$Base64_strict_encode64$4.$$arity=1),Opal.defs(self,"$urlsafe_decode64",$Base64_urlsafe_decode64$5=function(string){return decode(string.replace(/\-/g,"+").replace(/_/g,"/"))},$Base64_urlsafe_decode64$5.$$arity=1),Opal.defs(self,"$urlsafe_encode64",$Base64_urlsafe_encode64$6=function(string,$kwargs){var padding,str=nil;if(null==$kwargs)$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return null==(padding=$kwargs.$$smap.padding)&&(padding=!0),str=encode(string).replace(/\+/g,"-").replace(/\//g,"_"),$truthy(padding)||(str=str.$delete("=")),str},$Base64_urlsafe_encode64$6.$$arity=-2)}($nesting[0],$nesting)},Opal.modules.json=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.const_get_qualified,$$=Opal.const_get_relative,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$send=Opal.send,$hash2=Opal.hash2,$truthy=Opal.truthy;return Opal.add_stubs(["$raise","$new","$push","$[]=","$-","$[]","$create_id","$json_create","$const_get","$attr_accessor","$create_id=","$===","$parse","$generate","$from_object","$merge","$to_json","$responds_to?","$to_io","$write","$to_s","$to_a","$strftime"]),function($base,$parent_nesting){var $JSON_$$$1,$JSON_parse$2,$JSON_parse$excl$3,$JSON_load$4,$JSON_from_object$5,$JSON_generate$6,$JSON_dump$7,self=$module($base,"JSON"),$nesting=[self].concat($parent_nesting),$writer=nil;!function($base,$super,$parent_nesting){[$klass($base,$super,"JSONError")].concat($parent_nesting)}($nesting[0],$$($nesting,"StandardError"),$nesting),function($base,$super,$parent_nesting){[$klass($base,$super,"ParserError")].concat($parent_nesting)}($nesting[0],$$($nesting,"JSONError"),$nesting);var $hasOwn=Opal.hasOwnProperty;function $parse(source){try{return JSON.parse(source)}catch(e){self.$raise($$$($$($nesting,"JSON"),"ParserError"),e.message)}}function to_opal(value,options){var klass,arr,hash,i,ii,k;switch(typeof value){case"string":case"number":return value;case"boolean":return!!value;case"null":return nil;case"object":if(!value)return nil;if(value.$$is_array){for(arr=options.array_class.$new(),i=0,ii=value.length;i<ii;i++)arr.$push(to_opal(value[i],options));return arr}for(k in hash=options.object_class.$new(),value)$hasOwn.call(value,k)&&($writer=[k,to_opal(value[k],options)],$send(hash,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]);return options.parse||(klass=hash["$[]"]($$($nesting,"JSON").$create_id()))==nil?hash:$$$("::","Object").$const_get(klass).$json_create(hash)}}!function(self,$parent_nesting){[self].concat($parent_nesting);self.$attr_accessor("create_id")}(Opal.get_singleton_class(self),$nesting),$writer=["json_class"],$send(self,"create_id=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],Opal.defs(self,"$[]",$JSON_$$$1=function(value,options){return null==options&&(options=$hash2([],{})),$truthy($$($nesting,"String")["$==="](value))?this.$parse(value,options):this.$generate(value,options)},$JSON_$$$1.$$arity=-2),Opal.defs(self,"$parse",$JSON_parse$2=function(source,options){return null==options&&(options=$hash2([],{})),this.$from_object($parse(source),options.$merge($hash2(["parse"],{parse:!0})))},$JSON_parse$2.$$arity=-2),Opal.defs(self,"$parse!",$JSON_parse$excl$3=function(source,options){return null==options&&(options=$hash2([],{})),this.$parse(source,options)},$JSON_parse$excl$3.$$arity=-2),Opal.defs(self,"$load",$JSON_load$4=function(source,options){return null==options&&(options=$hash2([],{})),this.$from_object($parse(source),options)},$JSON_load$4.$$arity=-2),Opal.defs(self,"$from_object",$JSON_from_object$5=function(js_object,options){var $writer=nil;return null==options&&(options=$hash2([],{})),$truthy(options["$[]"]("object_class"))||($writer=["object_class",$$($nesting,"Hash")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),$truthy(options["$[]"]("array_class"))||($writer=["array_class",$$($nesting,"Array")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),to_opal(js_object,options.$$smap)},$JSON_from_object$5.$$arity=-2),Opal.defs(self,"$generate",$JSON_generate$6=function(obj,options){return null==options&&(options=$hash2([],{})),obj.$to_json(options)},$JSON_generate$6.$$arity=-2),Opal.defs(self,"$dump",$JSON_dump$7=function(obj,io,limit){var string;return null==io&&(io=nil),null==limit&&(limit=nil),string=this.$generate(obj),$truthy(io)?($truthy(io["$responds_to?"]("to_io"))&&(io=io.$to_io()),io.$write(string),io):string},$JSON_dump$7.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Object_to_json$8,self=$klass($base,null,"Object");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Object_to_json$8=function(){return this.$to_s().$to_json()},$Object_to_json$8.$$arity=0)}($nesting[0],0,$nesting),function($base,$parent_nesting){var $Enumerable_to_json$9,self=$module($base,"Enumerable");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Enumerable_to_json$9=function(){return this.$to_a().$to_json()},$Enumerable_to_json$9.$$arity=0)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Array_to_json$10,self=$klass($base,null,"Array");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Array_to_json$10=function(){for(var result=[],i=0,length=this.length;i<length;i++)result.push(this[i].$to_json());return"["+result.join(", ")+"]"},$Array_to_json$10.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Boolean_to_json$11,self=$klass($base,null,"Boolean");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Boolean_to_json$11=function(){return 1==this?"true":"false"},$Boolean_to_json$11.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Hash_to_json$12,self=$klass($base,null,"Hash");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Hash_to_json$12=function(){for(var key,value,result=[],i=0,keys=this.$$keys,length=keys.length;i<length;i++)(key=keys[i]).$$is_string?value=this.$$smap[key]:(value=key.value,key=key.key),result.push(key.$to_s().$to_json()+":"+value.$to_json());return"{"+result.join(", ")+"}"},$Hash_to_json$12.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $NilClass_to_json$13,self=$klass($base,null,"NilClass");[self].concat($parent_nesting);Opal.def(self,"$to_json",$NilClass_to_json$13=function(){return"null"},$NilClass_to_json$13.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Numeric_to_json$14,self=$klass($base,null,"Numeric");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Numeric_to_json$14=function(){return this.toString()},$Numeric_to_json$14.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"String");[self].concat($parent_nesting);Opal.alias(self,"to_json","inspect")}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Time_to_json$15,self=$klass($base,null,"Time");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Time_to_json$15=function(){return this.$strftime("%FT%T%z").$to_json()},$Time_to_json$15.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Date_to_json$16,$Date_as_json$17,self=$klass($base,null,"Date");[self].concat($parent_nesting);return Opal.def(self,"$to_json",$Date_to_json$16=function(){return this.$to_s().$to_json()},$Date_to_json$16.$$arity=0),Opal.def(self,"$as_json",$Date_as_json$17=function(){return this.$to_s()},$Date_as_json$17.$$arity=0),nil&&"as_json"}($nesting[0],0,$nesting)},Opal.modules["opal/source_map/map"]=function(Opal){var self=Opal.top,$nesting=[],$$$=(Opal.nil,Opal.const_get_qualified),$$=Opal.const_get_relative,$module=(Opal.breaker,Opal.slice,Opal.module);return Opal.add_stubs(["$require","$map","$to_json","$to_h","$to_s","$delete","$encode64"]),self.$require("base64"),self.$require("json"),function($base,$parent_nesting){var $Map_to_h$1,$Map_to_json$2,$Map_as_json$3,$Map_to_s$4,$Map_to_data_uri_comment$5,self=$module($base,"Map"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$to_h",$Map_to_h$1=function(){return this.$map()},$Map_to_h$1.$$arity=0),Opal.def(self,"$to_json",$Map_to_json$2=function(){return this.$map().$to_json()},$Map_to_json$2.$$arity=0),Opal.def(self,"$as_json",$Map_as_json$3=function($a){return Opal.slice.call(arguments,0,arguments.length),this.$to_h()},$Map_as_json$3.$$arity=-1),Opal.def(self,"$to_s",$Map_to_s$4=function(){return this.$map().$to_s()},$Map_to_s$4.$$arity=0),Opal.def(self,"$to_data_uri_comment",$Map_to_data_uri_comment$5=function(){return"//# sourceMappingURL=data:application/json;base64,"+$$($nesting,"Base64").$encode64(this.$to_json()).$delete("\n")},$Map_to_data_uri_comment$5.$$arity=0)}($$$($$($nesting,"Opal"),"SourceMap"),$nesting)},Opal.modules["opal/source_map/file"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.const_get_qualified,$$=Opal.const_get_relative,$klass=(Opal.breaker,Opal.slice,Opal.klass),$send=Opal.send,$truthy=Opal.truthy,$hash2=Opal.hash2;return Opal.add_stubs(["$include","$attr_reader","$new","$size","$[]=","$-","$join","$map","$to_proc","$file","$force_encoding","$source","$names","$encode_mappings","$relative_mappings","$absolute_mappings","$sort_by","$to_a","$line","$column","$source_map_name","$[]","$to_s","$to_int","$each","$fragments_by_line","$<<","$segment_from_fragment","$+","$private","$flat_map","$fragments","$code","$split","$with_index","$zero?","$!","$last"]),function($base,$super,$parent_nesting){var $File_initialize$1,$File_generated_code$3,$File_map$4,$File_names$5,$File_segment_from_fragment$8,$File_relative_mappings$9,$File_absolute_mappings$12,$File_fragments_by_line$15,self=$klass($base,null,"File"),$nesting=[self].concat($parent_nesting);return self.$$prototype.generated_code=self.$$prototype.fragments=self.$$prototype.names=self.$$prototype.names_map=self.$$prototype.relative_mappings=self.$$prototype.absolute_mappings=nil,self.$include($$$($$$($$($nesting,"Opal"),"SourceMap"),"Map")),self.$attr_reader("fragments"),self.$attr_reader("file"),self.$attr_reader("source"),Opal.def(self,"$initialize",$File_initialize$1=function(fragments,file,source){var $$2;return this.fragments=fragments,this.file=file,this.source=source,this.names_map=$send($$($nesting,"Hash"),"new",[],(($$2=function(hash,name){var $writer;$$2.$$s;return null==hash&&(hash=nil),null==name&&(name=nil),$writer=[name,hash.$size()],$send(hash,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]}).$$s=this,$$2.$$arity=2,$$2)),this.absolute_mappings=nil},$File_initialize$1.$$arity=3),Opal.def(self,"$generated_code",$File_generated_code$3=function(){var $a;return this.generated_code=$truthy($a=this.generated_code)?$a:$send(this.fragments,"map",[],"code".$to_proc()).$join()},$File_generated_code$3.$$arity=0),Opal.def(self,"$map",$File_map$4=function($kwargs){var source_root;if(null==$kwargs)$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return null==(source_root=$kwargs.$$smap.source_root)&&(source_root=""),$hash2(["version","sourceRoot","sources","sourcesContent","names","mappings"],{version:3,sourceRoot:source_root,sources:[this.$file()],sourcesContent:[this.$source().$force_encoding("UTF-8")],names:this.$names(),mappings:$$$($$$($$($nesting,"Opal"),"SourceMap"),"VLQ").$encode_mappings(this.$relative_mappings())})},$File_map$4.$$arity=-1),Opal.def(self,"$names",$File_names$5=function(){var $a,$$6,$$7;return this.names=$truthy($a=this.names)?$a:(this.$absolute_mappings(),$send($send(this.names_map.$to_a(),"sort_by",[],(($$6=function(_,index){$$6.$$s;return null==_&&(_=nil),null==index&&(index=nil),index}).$$s=this,$$6.$$arity=2,$$6)),"map",[],(($$7=function(name,_){$$7.$$s;return null==name&&(name=nil),null==_&&(_=nil),name}).$$s=this,$$7.$$arity=2,$$7)))},$File_names$5.$$arity=0),Opal.def(self,"$segment_from_fragment",$File_segment_from_fragment$8=function(fragment,generated_column){var $a,original_line,original_column,$writer=nil;return 0,original_line=$rb_minus(fragment.$line(),1),original_column=fragment.$column(),$truthy(fragment.$source_map_name())?[generated_column,0,original_line,original_column,$truthy($a=this.names_map["$[]"](fragment.$source_map_name().$to_s()))?$a:($writer=[fragment.$source_map_name().$to_s(),this.names_map.$size()],$send(this.names_map,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)])]:[generated_column,0,original_line,original_column]},$File_segment_from_fragment$8.$$arity=2),Opal.def(self,"$relative_mappings",$File_relative_mappings$9=function(){var $a,$$10,reference_segment=nil,reference_name_index=nil;return this.relative_mappings=$truthy($a=this.relative_mappings)?$a:(reference_segment=[0,0,0,0,0],reference_name_index=0,$send(this.$absolute_mappings(),"map",[],(($$10=function(absolute_mapping){var $$11,self=$$10.$$s||this,$writer=nil;return null==absolute_mapping&&(absolute_mapping=nil),$writer=[0,0],$send(reference_segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$send(absolute_mapping,"map",[],(($$11=function(absolute_segment){var $b,segment;$$11.$$s;return null==absolute_segment&&(absolute_segment=nil),segment=[],$writer=[0,$rb_minus(absolute_segment["$[]"](0),reference_segment["$[]"](0))],$send(segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[1,$rb_minus(absolute_segment["$[]"](1),$truthy($b=reference_segment["$[]"](1))?$b:0)],$send(segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[2,$rb_minus(absolute_segment["$[]"](2),$truthy($b=reference_segment["$[]"](2))?$b:0)],$send(segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[3,$rb_minus(absolute_segment["$[]"](3),$truthy($b=reference_segment["$[]"](3))?$b:0)],$send(segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$truthy(absolute_segment["$[]"](4))&&($writer=[4,$rb_minus(absolute_segment["$[]"](4).$to_int(),($truthy($b=reference_segment["$[]"](4))?$b:reference_name_index).$to_int())],$send(segment,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],reference_name_index=absolute_segment["$[]"](4)),reference_segment=absolute_segment,segment}).$$s=self,$$11.$$arity=1,$$11))}).$$s=this,$$10.$$arity=1,$$10)))},$File_relative_mappings$9.$$arity=0),Opal.def(self,"$absolute_mappings",$File_absolute_mappings$12=function(){var $a,$$13,mappings=nil;return this.absolute_mappings=$truthy($a=this.absolute_mappings)?$a:(mappings=[],$send(this.$fragments_by_line(),"each",[],(($$13=function(raw_segments){var $$14,self=$$13.$$s||this,generated_column=nil,segments=nil;return null==raw_segments&&(raw_segments=nil),generated_column=0,segments=[],$send(raw_segments,"each",[],(($$14=function($mlhs_tmp1){var $b,$c,lhs,rhs,self=$$14.$$s||this,generated_code=nil,fragment=nil;return null==$mlhs_tmp1&&($mlhs_tmp1=nil),$c=$mlhs_tmp1,generated_code=null==($b=Opal.to_ary($c))[0]?nil:$b[0],fragment=null==$b[1]?nil:$b[1],$truthy($truthy($b=fragment.$line())?fragment.$column():$b)&&segments["$<<"](self.$segment_from_fragment(fragment,generated_column)),lhs=generated_column,rhs=generated_code.$size(),generated_column="number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}).$$s=self,$$14.$$arity=1,$$14.$$has_top_level_mlhs_arg=!0,$$14)),mappings["$<<"](segments)}).$$s=this,$$13.$$arity=1,$$13)),mappings)},$File_absolute_mappings$12.$$arity=0),self.$private(),Opal.def(self,"$fragments_by_line",$File_fragments_by_line$15=function(){var $$16,raw_mappings=nil;return raw_mappings=[[]],$send(this.$fragments(),"flat_map",[],(($$16=function(fragment){var $$17,self=$$16.$$s||this,fragment_lines=nil;return null==fragment&&(fragment=nil),fragment_lines=fragment.$code().$split("\n",-1),$send(fragment_lines.$each(),"with_index",[],(($$17=function(fragment_line,index){var $a,raw_segment;$$17.$$s;return null==fragment_line&&(fragment_line=nil),null==index&&(index=nil),raw_segment=[fragment_line,fragment],$truthy($truthy($a=index["$zero?"]())?fragment_line.$size()["$zero?"]()["$!"]():$a)?raw_mappings.$last()["$<<"](raw_segment):$truthy($truthy($a=index["$zero?"]())?fragment_line.$size()["$zero?"]():$a)?nil:$truthy(fragment_line.$size()["$zero?"]())?raw_mappings["$<<"]([]):raw_mappings["$<<"]([raw_segment])}).$$s=self,$$17.$$arity=2,$$17))}).$$s=this,$$16.$$arity=1,$$16)),raw_mappings},$File_fragments_by_line$15.$$arity=0),nil&&"fragments_by_line"}($$$($$($nesting,"Opal"),"SourceMap"),0,$nesting)},Opal.modules["opal/source_map/index"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.const_get_qualified,$$=Opal.const_get_relative,$klass=(Opal.breaker,Opal.slice,Opal.klass),$hash2=Opal.hash2,$send=Opal.send,$truthy=Opal.truthy;return Opal.add_stubs(["$include","$attr_reader","$map","$to_h","$generated_code","$+","$count","$[]","$rindex","$size"]),function($base,$super,$parent_nesting){var $Index_initialize$1,$Index_map$2,self=$klass($base,null,"Index"),$nesting=[self].concat($parent_nesting);return self.$$prototype.source_maps=nil,self.$include($$$($$$($$($nesting,"Opal"),"SourceMap"),"Map")),self.$attr_reader("source_maps"),Opal.def(self,"$initialize",$Index_initialize$1=function(source_maps,$kwargs){var join;if(null==$kwargs)$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return null==(join=$kwargs.$$smap.join)&&(join=nil),this.source_maps=source_maps,this.join=join},$Index_initialize$1.$$arity=-2),Opal.def(self,"$map",$Index_map$2=function(){var $$3,offset_line=nil,offset_column=nil;return offset_column=offset_line=0,$hash2(["version","sections"],{version:3,sections:$send(this.source_maps,"map",[],($$3=function(source_map){var map,new_lines_count,self=$$3.$$s||this,generated_code=nil,last_line=nil;return null==self.join&&(self.join=nil),null==source_map&&(source_map=nil),map=$hash2(["offset","map"],{offset:$hash2(["line","column"],{line:offset_line,column:offset_column}),map:source_map.$to_h()}),generated_code=source_map.$generated_code(),$truthy(self.join)&&(generated_code=$rb_plus(generated_code,self.join)),new_lines_count=generated_code.$count("\n"),last_line=generated_code["$[]"](Opal.Range.$new($rb_plus(generated_code.$rindex("\n"),1),-1,!1)),offset_line=$rb_plus(offset_line,new_lines_count),offset_column=$rb_plus(offset_column,last_line.$size()),map},$$3.$$s=this,$$3.$$arity=1,$$3))})},$Index_map$2.$$arity=0),nil&&"map"}($$$($$($nesting,"Opal"),"SourceMap"),0,$nesting)},Opal.modules["opal/source_map/vlq"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?rhs<lhs:lhs["$>"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.const_get_qualified,$$=Opal.const_get_relative,$module=(Opal.breaker,Opal.slice,Opal.module),$send=Opal.send,$range=Opal.range,$hash2=Opal.hash2,$truthy=Opal.truthy;return Opal.add_stubs(["$<<","$-","$split","$inject","$[]","$[]=","$each","$<","$+","$-@","$loop","$&","$>>","$>","$|","$join","$any?","$shift","$raise","$==","$map","$encode","$each_with_index","$decode"]),function($base,$parent_nesting){var $VLQ$1,$VLQ_encode$2,$VLQ_decode$5,$VLQ_encode_mappings$6,$VLQ_decode_mappings$9,self=$module($base,"VLQ"),$nesting=[self].concat($parent_nesting);Opal.const_set($nesting[0],"VLQ_BASE_SHIFT",5),Opal.const_set($nesting[0],"VLQ_BASE",1["$<<"]($$($nesting,"VLQ_BASE_SHIFT"))),Opal.const_set($nesting[0],"VLQ_BASE_MASK",$rb_minus($$($nesting,"VLQ_BASE"),1)),Opal.const_set($nesting[0],"VLQ_CONTINUATION_BIT",$$($nesting,"VLQ_BASE")),Opal.const_set($nesting[0],"BASE64_DIGITS","ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".$split("")),Opal.const_set($nesting[0],"BASE64_VALUES",$send($range(0,64,!0),"inject",[$hash2([],{})],(($VLQ$1=function(h,i){var $writer;$VLQ$1.$$s;return null==h&&(h=nil),null==i&&(i=nil),$writer=[$$($nesting,"BASE64_DIGITS")["$[]"](i),i],$send(h,"[]=",Opal.to_a($writer)),$rb_minus($writer.length,1),h}).$$s=self,$VLQ$1.$$arity=2,$VLQ$1))),Opal.defs(self,"$encode",$VLQ_encode$2=function(ary){var $$3,self=this,result=nil;return result=[],function(){var $brk=Opal.new_brk();try{$send(ary,"each",[],(($$3=function(n){var $$4,lhs,rhs,self=$$3.$$s||this,vlq=nil;return null==n&&(n=nil),vlq=$truthy((rhs=0,"number"==typeof(lhs=n)&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)))?$rb_plus(n["$-@"]()["$<<"](1),1):n["$<<"](1),function(){var $brk=Opal.new_brk();try{return $send(self,"loop",[],(($$4=function(){$$4.$$s;var digit=nil;if(digit=vlq["$&"]($$($nesting,"VLQ_BASE_MASK")),vlq=vlq["$>>"]($$($nesting,"VLQ_BASE_SHIFT")),$truthy($rb_gt(vlq,0))&&(digit=digit["$|"]($$($nesting,"VLQ_CONTINUATION_BIT"))),result["$<<"]($$($nesting,"BASE64_DIGITS")["$[]"](digit)),$truthy($rb_gt(vlq,0)))return nil;Opal.brk(nil,$brk)}).$$s=self,$$4.$$brk=$brk,$$4.$$arity=0,$$4))}catch(err){if(err===$brk)return err.$v;throw err}}()}).$$s=self,$$3.$$brk=$brk,$$3.$$arity=1,$$3))}catch(err){if(err===$brk)return err.$v;throw err}}(),result.$join()},$VLQ_encode$2.$$arity=1),Opal.defs(self,"$decode",$VLQ_decode$5=function(str){var result=nil,chars=nil,vlq=nil,shift=nil,continuation=nil,char$=nil,digit=nil;for(result=[],chars=str.$split("");$truthy(chars["$any?"]());){for(continuation=!(shift=vlq=0);$truthy(continuation);)char$=chars.$shift(),$truthy(char$)||this.$raise($$($nesting,"ArgumentError")),(digit=$$($nesting,"BASE64_VALUES")["$[]"](char$))["$&"]($$($nesting,"VLQ_CONTINUATION_BIT"))["$=="](0)&&(continuation=!1),digit=digit["$&"]($$($nesting,"VLQ_BASE_MASK")),vlq=$rb_plus(vlq,digit["$<<"](shift)),shift=$rb_plus(shift,$$($nesting,"VLQ_BASE_SHIFT"));result["$<<"](vlq["$&"](1)["$=="](1)?vlq["$>>"](1)["$-@"]():vlq["$>>"](1))}return result},$VLQ_decode$5.$$arity=1),Opal.defs(self,"$encode_mappings",$VLQ_encode_mappings$6=function(ary){var $$7;return $send(ary,"map",[],($$7=function(group){var $$8,self=$$7.$$s||this;return null==group&&(group=nil),$send(group,"map",[],($$8=function(segment){var self=$$8.$$s||this;return null==segment&&(segment=nil),self.$encode(segment)},$$8.$$s=self,$$8.$$arity=1,$$8)).$join(",")},$$7.$$s=this,$$7.$$arity=1,$$7)).$join(";")},$VLQ_encode_mappings$6.$$arity=1),Opal.defs(self,"$decode_mappings",$VLQ_decode_mappings$9=function(str){var $$10,mappings=nil;return mappings=[],$send(str.$split(";"),"each_with_index",[],(($$10=function(group,index){var $$11,$writer,self=$$10.$$s||this;return null==group&&(group=nil),null==index&&(index=nil),$writer=[index,[]],$send(mappings,"[]=",Opal.to_a($writer)),$rb_minus($writer.length,1),$send(group.$split(","),"each",[],(($$11=function(segment){var self=$$11.$$s||this;return null==segment&&(segment=nil),mappings["$[]"](index)["$<<"](self.$decode(segment))}).$$s=self,$$11.$$arity=1,$$11))}).$$s=this,$$10.$$arity=2,$$10)),mappings},$VLQ_decode_mappings$9.$$arity=1)}($$$($$($nesting,"Opal"),"SourceMap"),$nesting)},Opal.modules["opal/source_map"]=function(Opal){Opal.top;var $nesting=[],$module=(Opal.nil,Opal.const_get_qualified,Opal.const_get_relative,Opal.breaker,Opal.slice,Opal.module);return Opal.add_stubs(["$autoload"]),function($base,$parent_nesting){var $nesting=[$module($base,"Opal")].concat($parent_nesting);!function($base,$parent_nesting){var self=$module($base,"SourceMap");[self].concat($parent_nesting);self.$autoload("Map","opal/source_map/map"),self.$autoload("File","opal/source_map/file"),self.$autoload("Index","opal/source_map/index"),self.$autoload("VLQ","opal/source_map/vlq")}($nesting[0],$nesting)}($nesting[0],$nesting)},Opal.modules["opal-source-maps"]=function(Opal){var self=Opal.top;Opal.nil,Opal.const_get_qualified,Opal.const_get_relative,Opal.breaker,Opal.slice;return Opal.add_stubs(["$require"]),self.$require("opal/source_map")};

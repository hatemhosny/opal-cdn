Opal.modules.ostruct=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.const_get_qualified,Opal.const_get_relative),$klass=(Opal.breaker,Opal.slice,Opal.klass),$hash2=Opal.hash2,$truthy=Opal.truthy,$send=Opal.send,$range=Opal.range;return Opal.add_stubs(["$each_pair","$new_ostruct_member","$[]=","$-","$[]","$to_sym","$>","$length","$raise","$new","$end_with?","$!=","$enum_for","$is_a?","$==","$instance_variable_get","$===","$eql?","$dup","$to_n","$hash","$attr_reader","$__send__","$singleton_class","$delete","$respond_to?","$define_singleton_method","$__id__","$class","$any?","$+","$join","$map","$inspect"]),function($base,$super,$parent_nesting){var $OpenStruct_initialize$1,$OpenStruct_$$$3,$OpenStruct_$$$eq$4,$OpenStruct_method_missing$5,$OpenStruct_each_pair$6,$OpenStruct_$eq_eq$8,$OpenStruct_$eq_eq_eq$9,$OpenStruct_eql$ques$10,$OpenStruct_to_h$11,$OpenStruct_to_n$12,$OpenStruct_hash$13,$OpenStruct_delete_field$14,$OpenStruct_new_ostruct_member$15,$OpenStruct_inspect$18,ostruct_ids,self=$klass($base,null,"OpenStruct"),$nesting=[self].concat($parent_nesting);return self.$$prototype.table=nil,Opal.def(self,"$initialize",$OpenStruct_initialize$1=function(hash){var $$2;return null==hash&&(hash=nil),this.table=$hash2([],{}),$truthy(hash)?$send(hash,"each_pair",[],(($$2=function(key,value){var $writer,self=$$2.$$s||this;return null==self.table&&(self.table=nil),null==key&&(key=nil),null==value&&(value=nil),$writer=[self.$new_ostruct_member(key),value],$send(self.table,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]}).$$s=this,$$2.$$arity=2,$$2)):nil},$OpenStruct_initialize$1.$$arity=-1),Opal.def(self,"$[]",$OpenStruct_$$$3=function(name){return this.table["$[]"](name.$to_sym())},$OpenStruct_$$$3.$$arity=1),Opal.def(self,"$[]=",$OpenStruct_$$$eq$4=function(name,value){var $writer;return $writer=[this.$new_ostruct_member(name),value],$send(this.table,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},$OpenStruct_$$$eq$4.$$arity=2),Opal.def(self,"$method_missing",$OpenStruct_method_missing$5=function(name,$a){var $post_args,args,lhs,rhs,$writer=nil;return $post_args=Opal.slice.call(arguments,1,arguments.length),$truthy((lhs=(args=$post_args).$length(),rhs=2,"number"==typeof lhs&&"number"==typeof rhs?rhs<lhs:lhs["$>"](rhs)))&&this.$raise($$($nesting,"NoMethodError").$new("undefined method `"+name+"' for #<OpenStruct>",name)),$truthy(name["$end_with?"]("="))?($truthy(args.$length()["$!="](1))&&this.$raise($$($nesting,"ArgumentError"),"wrong number of arguments (0 for 1)"),$writer=[this.$new_ostruct_member(name["$[]"]($range(0,-2,!1))),args["$[]"](0)],$send(this.table,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]):this.table["$[]"](name.$to_sym())},$OpenStruct_method_missing$5.$$arity=-2),Opal.def(self,"$each_pair",$OpenStruct_each_pair$6=function(){var $$7,$iter=$OpenStruct_each_pair$6.$$p,$yield=$iter||nil;return $iter&&($OpenStruct_each_pair$6.$$p=null),$yield===nil?this.$enum_for("each_pair"):$send(this.table,"each_pair",[],(($$7=function(pair){$$7.$$s;return null==pair&&(pair=nil),Opal.yield1($yield,pair)}).$$s=this,$$7.$$arity=1,$$7))},$OpenStruct_each_pair$6.$$arity=0),Opal.def(self,"$==",$OpenStruct_$eq_eq$8=function(other){return!!$truthy(other["$is_a?"]($$($nesting,"OpenStruct")))&&this.table["$=="](other.$instance_variable_get("@table"))},$OpenStruct_$eq_eq$8.$$arity=1),Opal.def(self,"$===",$OpenStruct_$eq_eq_eq$9=function(other){return!!$truthy(other["$is_a?"]($$($nesting,"OpenStruct")))&&this.table["$==="](other.$instance_variable_get("@table"))},$OpenStruct_$eq_eq_eq$9.$$arity=1),Opal.def(self,"$eql?",$OpenStruct_eql$ques$10=function(other){return!!$truthy(other["$is_a?"]($$($nesting,"OpenStruct")))&&this.table["$eql?"](other.$instance_variable_get("@table"))},$OpenStruct_eql$ques$10.$$arity=1),Opal.def(self,"$to_h",$OpenStruct_to_h$11=function(){return this.table.$dup()},$OpenStruct_to_h$11.$$arity=0),Opal.def(self,"$to_n",$OpenStruct_to_n$12=function(){return this.table.$to_n()},$OpenStruct_to_n$12.$$arity=0),Opal.def(self,"$hash",$OpenStruct_hash$13=function(){return this.table.$hash()},$OpenStruct_hash$13.$$arity=0),self.$attr_reader("table"),Opal.def(self,"$delete_field",$OpenStruct_delete_field$14=function(name){var sym;sym=name.$to_sym();try{this.$singleton_class().$__send__("remove_method",sym,sym+"=")}catch($err){if(!Opal.rescue($err,[$$($nesting,"NameError")]))throw $err;Opal.pop_exception()}return this.table.$delete(sym)},$OpenStruct_delete_field$14.$$arity=1),Opal.def(self,"$new_ostruct_member",$OpenStruct_new_ostruct_member$15=function(name){var $$16,$$17;return name=name.$to_sym(),$truthy(this["$respond_to?"](name))||($send(this,"define_singleton_method",[name],(($$16=function(){var self=$$16.$$s||this;return null==self.table&&(self.table=nil),self.table["$[]"](name)}).$$s=this,$$16.$$arity=0,$$16)),$send(this,"define_singleton_method",[name+"="],(($$17=function(x){var $writer,self=$$17.$$s||this;return null==self.table&&(self.table=nil),null==x&&(x=nil),$writer=[name,x],$send(self.table,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]}).$$s=this,$$17.$$arity=1,$$17))),name},$OpenStruct_new_ostruct_member$15.$$arity=1),Opal.def(self,"$inspect",$OpenStruct_inspect$18=function(){var $$19,self=this,result=nil,top=void 0===ostruct_ids,ostruct_id=self.$__id__();return function(){try{return result="#<"+self.$class(),top&&(ostruct_ids={}),ostruct_ids.hasOwnProperty(ostruct_id)?result+" ...>":(ostruct_ids[ostruct_id]=!0,$truthy(self.table["$any?"]())&&(result=$rb_plus(result," ")),result=$rb_plus(result=$rb_plus(result,$send(self.$each_pair(),"map",[],($$19=function(name,value){$$19.$$s;return null==name&&(name=nil),null==value&&(value=nil),name+"="+value.$inspect()},$$19.$$s=self,$$19.$$arity=2,$$19)).$join(", ")),">"))}finally{top&&(ostruct_ids=void 0)}}()},$OpenStruct_inspect$18.$$arity=0),Opal.alias(self,"to_s","inspect")}($nesting[0],0,$nesting)};
